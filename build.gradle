plugins {
	id 'java'
	id 'jacoco'
	// id 'com.google.protobuf' version '0.9.4'
	alias(libs.plugins.spotless)
	alias(libs.plugins.spring.boot)
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation(platform(libs.spring.boot.dependencies))
	implementation libs.spring.boot.starter.data.jpa
	//
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'io.micrometer:micrometer-core:1.13.7'
	// blaze pool
	implementation 'com.github.chrisvest:stormpot:4.0'
	implementation 'com.conversantmedia:disruptor:1.2.16'
	//
	// implementation 'com.google.protobuf:protobuf-java:4.28.3'
	implementation libs.guava
	runtimeOnly libs.h2
	//
	compileOnly libs.lombok
	annotationProcessor libs.bundles.annotation.processor
	//
	testImplementation libs.bundles.testing
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('build') {
	dependsOn spotlessApply
}

//protobuf {
//	protoc {
//		// Download from repositories
//		artifact = 'com.google.protobuf:protoc:4.28.3'
//	}
//}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// Use the default importOrder configuration
		importOrderFile('spotless.importorder')
		targetExclude("**/generated/**/*.java")
		removeUnusedImports()
		// cleanthat()
		palantirJavaFormat()
		formatAnnotations()  // fixes formatting of type annotations, see below
		licenseHeader '/* lucas, yamingdeng@outlook.com (C) $YEAR */ \n\n' // or licenseHeaderFile
	}
}

apply from: 'jacoco-build.gradle'