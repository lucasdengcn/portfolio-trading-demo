plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.18'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.google.protobuf' version '0.9.4'
	id 'com.diffplug.spotless' version '6.13.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.google.protobuf:protobuf-java:4.28.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'com.google.guava:guava:33.3.1-jre'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('build') {
	dependsOn spotlessApply
}

protobuf {
	protoc {
		// Download from repositories
		artifact = 'com.google.protobuf:protoc:4.28.3'
	}
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// Use the default importOrder configuration
		importOrderFile('spotless.importorder')
		targetExclude("**/generated/**/*.java")
		removeUnusedImports()
		// cleanthat()
		palantirJavaFormat()
		formatAnnotations()  // fixes formatting of type annotations, see below
		licenseHeader '/* lucas, yamingdeng@outlook.com (C) $YEAR */ \n\n' // or licenseHeaderFile
	}
}

apply from: 'jacoco-build.gradle'